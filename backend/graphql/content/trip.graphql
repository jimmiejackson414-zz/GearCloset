extend type Query @guard(with: ["api"]) {
    trip(id: ID! @eq): Trip! @find
    trips: [Trip]! @field(resolver: "TripsQuery@find_by_user")
}

extend type Mutation @guard(with: ["api"]) {
    setSelectedPack(input: SelectedPackInput @spread): Trip! @field(resolver: "TripMutator@setSelectedPack")
}

type Trip {
    id: ID!
    name: String
    description: String
    owner: User! @belongsTo
    starting_point: String
    ending_point: String
    created_at: DateTime!
    updated_at: DateTime!
    owner_id: ID
    pack_id: ID

    pack: Pack @belongsTo
    shopping_list_items: [ShoppingListItem]! @hasMany
    todos: [Todo]! @hasMany
    trip_details(type: String @where(operator: "=", key: "type")): [TripDetail]! @hasMany
    users: [User]! @hasMany
}

input CreateTripBelongsTo {
    connect: ID
}

input SelectedPackInput {
    trip_id: ID!
    pack_id: ID!
}